Terminals unused in grammar

   AOP


State 67 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: KEYWORD KEYWORD '(' ')' '{' STMTS '}'

    2 STMTS: STMT X1

    3 X1: %empty
    4   | STMTS

    5 STMT: DECL
    6     | ASSIGN ';'
    7     | LOOP
    8     | COND
    9     | PRINT

   10 DECL: let X2

   11 X2: IDENTIFIER '=' INTEGER ';'
   12   | KEYWORD IDENTIFIER '=' LITERAL ';'

   13 ASSIGN: IDENTIFIER '=' EXPRESSION

   14 EXPRESSION: TERM
   15           | EXPRESSION '+' EXPRESSION
   16           | EXPRESSION '-' EXPRESSION
   17           | EXPRESSION '*' EXPRESSION
   18           | EXPRESSION '/' EXPRESSION

   19 TERM: '(' EXPRESSION ')'
   20     | IDENTIFIER
   21     | NUMBER

   22 LOOP: FOR1
   23     | WHILE

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER '{' STMTS '}'

   25 WHILE: while1 BOOLEAN '{' STMTS '}'

   26 COND: if1 BOOLEAN '{' STMTS '}' X10

   27 X10: %empty
   28    | else1 '{' STMTS '}'

   29 LITERAL: NUMBER
   30        | STRING

   31 PRINT: KEYWORD '!' '(' STRING X9

   32 X9: ',' EXTEND ')' ';'
   33   | ')' ';'

   34 EXTEND: IDENTIFIER X6

   35 X6: %empty
   36   | ',' EXTEND

   37 BOOLEAN: BTERM
   38        | BOOLEAN LOP BOOLEAN

   39 BTERM: EXPRESSION RELOP EXPRESSION
   40      | '!' BTERM

   41 NUMBER: INTEGER
   42       | FLOAT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 31 40
'(' (40) 1 19 31
')' (41) 1 19 32 33
'*' (42) 17
'+' (43) 15
',' (44) 32 36
'-' (45) 16
'.' (46) 24
'/' (47) 18
';' (59) 6 11 12 32 33
'=' (61) 11 12 13
'{' (123) 1 24 25 26 28
'}' (125) 1 24 25 26 28
error (256)
INTEGER (258) 11 24 41
FLOAT (259) 42
KEYWORD (260) 1 12 24 31
AOP (261)
RELOP (262) 39
LOP (263) 38
STRING (264) 30 31
IDENTIFIER (265) 11 12 13 20 24 34
for1 (266) 24
while1 (267) 25
if1 (268) 26
else1 (269) 28
let (270) 10


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
PROGRAM (30)
    on left: 1, on right: 0
STMTS (31)
    on left: 2, on right: 1 4 24 25 26 28
X1 (32)
    on left: 3 4, on right: 2
STMT (33)
    on left: 5 6 7 8 9, on right: 2
DECL (34)
    on left: 10, on right: 5
X2 (35)
    on left: 11 12, on right: 10
ASSIGN (36)
    on left: 13, on right: 6
EXPRESSION (37)
    on left: 14 15 16 17 18, on right: 13 15 16 17 18 19 39
TERM (38)
    on left: 19 20 21, on right: 14
LOOP (39)
    on left: 22 23, on right: 7
FOR1 (40)
    on left: 24, on right: 22
WHILE (41)
    on left: 25, on right: 23
COND (42)
    on left: 26, on right: 8
X10 (43)
    on left: 27 28, on right: 26
LITERAL (44)
    on left: 29 30, on right: 12
PRINT (45)
    on left: 31, on right: 9
X9 (46)
    on left: 32 33, on right: 31
EXTEND (47)
    on left: 34, on right: 32 36
X6 (48)
    on left: 35 36, on right: 34
BOOLEAN (49)
    on left: 37 38, on right: 25 26 38
BTERM (50)
    on left: 39 40, on right: 37 40
NUMBER (51)
    on left: 41 42, on right: 21 29


State 0

    0 $accept: . PROGRAM $end

    KEYWORD  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    1 PROGRAM: KEYWORD . KEYWORD '(' ')' '{' STMTS '}'

    KEYWORD  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    1 PROGRAM: KEYWORD KEYWORD . '(' ')' '{' STMTS '}'

    '('  shift, and go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    1 PROGRAM: KEYWORD KEYWORD '(' . ')' '{' STMTS '}'

    ')'  shift, and go to state 6


State 6

    1 PROGRAM: KEYWORD KEYWORD '(' ')' . '{' STMTS '}'

    '{'  shift, and go to state 7


State 7

    1 PROGRAM: KEYWORD KEYWORD '(' ')' '{' . STMTS '}'

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    STMTS   go to state 14
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 8

   31 PRINT: KEYWORD . '!' '(' STRING X9

    '!'  shift, and go to state 23


State 9

   13 ASSIGN: IDENTIFIER . '=' EXPRESSION

    '='  shift, and go to state 24


State 10

   24 FOR1: for1 . IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER '{' STMTS '}'

    IDENTIFIER  shift, and go to state 25


State 11

   25 WHILE: while1 . BOOLEAN '{' STMTS '}'

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29
    '!'         shift, and go to state 30

    EXPRESSION  go to state 31
    TERM        go to state 32
    BOOLEAN     go to state 33
    BTERM       go to state 34
    NUMBER      go to state 35


State 12

   26 COND: if1 . BOOLEAN '{' STMTS '}' X10

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29
    '!'         shift, and go to state 30

    EXPRESSION  go to state 31
    TERM        go to state 32
    BOOLEAN     go to state 36
    BTERM       go to state 34
    NUMBER      go to state 35


State 13

   10 DECL: let . X2

    KEYWORD     shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    X2  go to state 39


State 14

    1 PROGRAM: KEYWORD KEYWORD '(' ')' '{' STMTS . '}'

    '}'  shift, and go to state 40


State 15

    2 STMTS: STMT . X1

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    $default  reduce using rule 3 (X1)

    STMTS   go to state 41
    X1      go to state 42
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 16

    5 STMT: DECL .

    $default  reduce using rule 5 (STMT)


State 17

    6 STMT: ASSIGN . ';'

    ';'  shift, and go to state 43


State 18

    7 STMT: LOOP .

    $default  reduce using rule 7 (STMT)


State 19

   22 LOOP: FOR1 .

    $default  reduce using rule 22 (LOOP)


State 20

   23 LOOP: WHILE .

    $default  reduce using rule 23 (LOOP)


State 21

    8 STMT: COND .

    $default  reduce using rule 8 (STMT)


State 22

    9 STMT: PRINT .

    $default  reduce using rule 9 (STMT)


State 23

   31 PRINT: KEYWORD '!' . '(' STRING X9

    '('  shift, and go to state 44


State 24

   13 ASSIGN: IDENTIFIER '=' . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 45
    TERM        go to state 32
    NUMBER      go to state 35


State 25

   24 FOR1: for1 IDENTIFIER . KEYWORD INTEGER '.' '.' INTEGER '{' STMTS '}'

    KEYWORD  shift, and go to state 46


State 26

   41 NUMBER: INTEGER .

    $default  reduce using rule 41 (NUMBER)


State 27

   42 NUMBER: FLOAT .

    $default  reduce using rule 42 (NUMBER)


State 28

   20 TERM: IDENTIFIER .

    $default  reduce using rule 20 (TERM)


State 29

   19 TERM: '(' . EXPRESSION ')'

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 47
    TERM        go to state 32
    NUMBER      go to state 35


State 30

   40 BTERM: '!' . BTERM

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29
    '!'         shift, and go to state 30

    EXPRESSION  go to state 31
    TERM        go to state 32
    BTERM       go to state 48
    NUMBER      go to state 35


State 31

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION
   39 BTERM: EXPRESSION . RELOP EXPRESSION

    '+'    shift, and go to state 49
    '-'    shift, and go to state 50
    '*'    shift, and go to state 51
    '/'    shift, and go to state 52
    RELOP  shift, and go to state 53


State 32

   14 EXPRESSION: TERM .

    $default  reduce using rule 14 (EXPRESSION)


State 33

   25 WHILE: while1 BOOLEAN . '{' STMTS '}'
   38 BOOLEAN: BOOLEAN . LOP BOOLEAN

    LOP  shift, and go to state 54
    '{'  shift, and go to state 55


State 34

   37 BOOLEAN: BTERM .

    $default  reduce using rule 37 (BOOLEAN)


State 35

   21 TERM: NUMBER .

    $default  reduce using rule 21 (TERM)


State 36

   26 COND: if1 BOOLEAN . '{' STMTS '}' X10
   38 BOOLEAN: BOOLEAN . LOP BOOLEAN

    LOP  shift, and go to state 54
    '{'  shift, and go to state 56


State 37

   12 X2: KEYWORD . IDENTIFIER '=' LITERAL ';'

    IDENTIFIER  shift, and go to state 57


State 38

   11 X2: IDENTIFIER . '=' INTEGER ';'

    '='  shift, and go to state 58


State 39

   10 DECL: let X2 .

    $default  reduce using rule 10 (DECL)


State 40

    1 PROGRAM: KEYWORD KEYWORD '(' ')' '{' STMTS '}' .

    $default  reduce using rule 1 (PROGRAM)


State 41

    4 X1: STMTS .

    $default  reduce using rule 4 (X1)


State 42

    2 STMTS: STMT X1 .

    $default  reduce using rule 2 (STMTS)


State 43

    6 STMT: ASSIGN ';' .

    $default  reduce using rule 6 (STMT)


State 44

   31 PRINT: KEYWORD '!' '(' . STRING X9

    STRING  shift, and go to state 59


State 45

   13 ASSIGN: IDENTIFIER '=' EXPRESSION .
   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 13 (ASSIGN)


State 46

   24 FOR1: for1 IDENTIFIER KEYWORD . INTEGER '.' '.' INTEGER '{' STMTS '}'

    INTEGER  shift, and go to state 60


State 47

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION
   19 TERM: '(' EXPRESSION . ')'

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    ')'  shift, and go to state 61


State 48

   40 BTERM: '!' BTERM .

    $default  reduce using rule 40 (BTERM)


State 49

   15 EXPRESSION: EXPRESSION '+' . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 62
    TERM        go to state 32
    NUMBER      go to state 35


State 50

   16 EXPRESSION: EXPRESSION '-' . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 63
    TERM        go to state 32
    NUMBER      go to state 35


State 51

   17 EXPRESSION: EXPRESSION '*' . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 64
    TERM        go to state 32
    NUMBER      go to state 35


State 52

   18 EXPRESSION: EXPRESSION '/' . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 65
    TERM        go to state 32
    NUMBER      go to state 35


State 53

   39 BTERM: EXPRESSION RELOP . EXPRESSION

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29

    EXPRESSION  go to state 66
    TERM        go to state 32
    NUMBER      go to state 35


State 54

   38 BOOLEAN: BOOLEAN LOP . BOOLEAN

    INTEGER     shift, and go to state 26
    FLOAT       shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    '('         shift, and go to state 29
    '!'         shift, and go to state 30

    EXPRESSION  go to state 31
    TERM        go to state 32
    BOOLEAN     go to state 67
    BTERM       go to state 34
    NUMBER      go to state 35


State 55

   25 WHILE: while1 BOOLEAN '{' . STMTS '}'

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    STMTS   go to state 68
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 56

   26 COND: if1 BOOLEAN '{' . STMTS '}' X10

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    STMTS   go to state 69
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 57

   12 X2: KEYWORD IDENTIFIER . '=' LITERAL ';'

    '='  shift, and go to state 70


State 58

   11 X2: IDENTIFIER '=' . INTEGER ';'

    INTEGER  shift, and go to state 71


State 59

   31 PRINT: KEYWORD '!' '(' STRING . X9

    ')'  shift, and go to state 72
    ','  shift, and go to state 73

    X9  go to state 74


State 60

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER . '.' '.' INTEGER '{' STMTS '}'

    '.'  shift, and go to state 75


State 61

   19 TERM: '(' EXPRESSION ')' .

    $default  reduce using rule 19 (TERM)


State 62

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   15           | EXPRESSION '+' EXPRESSION .
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 15 (EXPRESSION)


State 63

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   16           | EXPRESSION '-' EXPRESSION .
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 16 (EXPRESSION)


State 64

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   17           | EXPRESSION '*' EXPRESSION .
   18           | EXPRESSION . '/' EXPRESSION

    $default  reduce using rule 17 (EXPRESSION)


State 65

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION
   18           | EXPRESSION '/' EXPRESSION .

    $default  reduce using rule 18 (EXPRESSION)


State 66

   15 EXPRESSION: EXPRESSION . '+' EXPRESSION
   16           | EXPRESSION . '-' EXPRESSION
   17           | EXPRESSION . '*' EXPRESSION
   18           | EXPRESSION . '/' EXPRESSION
   39 BTERM: EXPRESSION RELOP EXPRESSION .

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 39 (BTERM)


State 67

   	38 BOOLEAN: BOOLEAN . LOP BOOLEAN
   	38        | BOOLEAN LOP BOOLEAN .

    	LOP  shift, and go to state 54

    	LOP       [reduce using rule 38 (BOOLEAN)]
    	$default  reduce using rule 38 (BOOLEAN)


State 68

   25 WHILE: while1 BOOLEAN '{' STMTS . '}'

    '}'  shift, and go to state 76


State 69

   26 COND: if1 BOOLEAN '{' STMTS . '}' X10

    '}'  shift, and go to state 77


State 70

   12 X2: KEYWORD IDENTIFIER '=' . LITERAL ';'

    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    STRING   shift, and go to state 78

    LITERAL  go to state 79
    NUMBER   go to state 80


State 71

   11 X2: IDENTIFIER '=' INTEGER . ';'

    ';'  shift, and go to state 81


State 72

   33 X9: ')' . ';'

    ';'  shift, and go to state 82


State 73

   32 X9: ',' . EXTEND ')' ';'

    IDENTIFIER  shift, and go to state 83

    EXTEND  go to state 84


State 74

   31 PRINT: KEYWORD '!' '(' STRING X9 .

    $default  reduce using rule 31 (PRINT)


State 75

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' . '.' INTEGER '{' STMTS '}'

    '.'  shift, and go to state 85


State 76

   25 WHILE: while1 BOOLEAN '{' STMTS '}' .

    $default  reduce using rule 25 (WHILE)


State 77

   26 COND: if1 BOOLEAN '{' STMTS '}' . X10

    else1  shift, and go to state 86

    $default  reduce using rule 27 (X10)

    X10  go to state 87


State 78

   30 LITERAL: STRING .

    $default  reduce using rule 30 (LITERAL)


State 79

   12 X2: KEYWORD IDENTIFIER '=' LITERAL . ';'

    ';'  shift, and go to state 88


State 80

   29 LITERAL: NUMBER .

    $default  reduce using rule 29 (LITERAL)


State 81

   11 X2: IDENTIFIER '=' INTEGER ';' .

    $default  reduce using rule 11 (X2)


State 82

   33 X9: ')' ';' .

    $default  reduce using rule 33 (X9)


State 83

   34 EXTEND: IDENTIFIER . X6

    ','  shift, and go to state 89

    $default  reduce using rule 35 (X6)

    X6  go to state 90


State 84

   32 X9: ',' EXTEND . ')' ';'

    ')'  shift, and go to state 91


State 85

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' . INTEGER '{' STMTS '}'

    INTEGER  shift, and go to state 92


State 86

   28 X10: else1 . '{' STMTS '}'

    '{'  shift, and go to state 93


State 87

   26 COND: if1 BOOLEAN '{' STMTS '}' X10 .

    $default  reduce using rule 26 (COND)


State 88

   12 X2: KEYWORD IDENTIFIER '=' LITERAL ';' .

    $default  reduce using rule 12 (X2)


State 89

   36 X6: ',' . EXTEND

    IDENTIFIER  shift, and go to state 83

    EXTEND  go to state 94


State 90

   34 EXTEND: IDENTIFIER X6 .

    $default  reduce using rule 34 (EXTEND)


State 91

   32 X9: ',' EXTEND ')' . ';'

    ';'  shift, and go to state 95


State 92

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER . '{' STMTS '}'

    '{'  shift, and go to state 96


State 93

   28 X10: else1 '{' . STMTS '}'

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    STMTS   go to state 97
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 94

   36 X6: ',' EXTEND .

    $default  reduce using rule 36 (X6)


State 95

   32 X9: ',' EXTEND ')' ';' .

    $default  reduce using rule 32 (X9)


State 96

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER '{' . STMTS '}'

    KEYWORD     shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    for1        shift, and go to state 10
    while1      shift, and go to state 11
    if1         shift, and go to state 12
    let         shift, and go to state 13

    STMTS   go to state 98
    STMT    go to state 15
    DECL    go to state 16
    ASSIGN  go to state 17
    LOOP    go to state 18
    FOR1    go to state 19
    WHILE   go to state 20
    COND    go to state 21
    PRINT   go to state 22


State 97

   28 X10: else1 '{' STMTS . '}'

    '}'  shift, and go to state 99


State 98

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER '{' STMTS . '}'

    '}'  shift, and go to state 100


State 99

   28 X10: else1 '{' STMTS '}' .

    $default  reduce using rule 28 (X10)


State 100

   24 FOR1: for1 IDENTIFIER KEYWORD INTEGER '.' '.' INTEGER '{' STMTS '}' .

    $default  reduce using rule 24 (FOR1)
